<?php
/**
 * Generated by Protobuf protoc plugin.
 *
 * File descriptor : Invoicing/UniversalTransferDocumentInfo.proto
 */


namespace Antlena\SDK\Diadoc\Proto\Invoicing;

/**
 * Protobuf enum : Antlena.SDK.Diadoc.Proto.Invoicing.FunctionType
 */
class FunctionType extends \Protobuf\Enum
{

    /**
     * Invoice = 0
     */
    const Invoice_VALUE = 0;

    /**
     * Basic = 1
     */
    const Basic_VALUE = 1;

    /**
     * InvoiceAndBasic = 2
     */
    const InvoiceAndBasic_VALUE = 2;

    /**
     * @var \Antlena\SDK\Diadoc\Proto\Invoicing\FunctionType
     */
    protected static $Invoice = null;

    /**
     * @var \Antlena\SDK\Diadoc\Proto\Invoicing\FunctionType
     */
    protected static $Basic = null;

    /**
     * @var \Antlena\SDK\Diadoc\Proto\Invoicing\FunctionType
     */
    protected static $InvoiceAndBasic = null;

    /**
     * @return \Antlena\SDK\Diadoc\Proto\Invoicing\FunctionType
     */
    public static function Invoice()
    {
        if (self::$Invoice !== null) {
            return self::$Invoice;
        }

        return self::$Invoice = new self('Invoice', self::Invoice_VALUE);
    }

    /**
     * @return \Antlena\SDK\Diadoc\Proto\Invoicing\FunctionType
     */
    public static function Basic()
    {
        if (self::$Basic !== null) {
            return self::$Basic;
        }

        return self::$Basic = new self('Basic', self::Basic_VALUE);
    }

    /**
     * @return \Antlena\SDK\Diadoc\Proto\Invoicing\FunctionType
     */
    public static function InvoiceAndBasic()
    {
        if (self::$InvoiceAndBasic !== null) {
            return self::$InvoiceAndBasic;
        }

        return self::$InvoiceAndBasic = new self('InvoiceAndBasic', self::InvoiceAndBasic_VALUE);
    }

    /**
     * @param int $value
     * @return \Antlena\SDK\Diadoc\Proto\Invoicing\FunctionType
     */
    public static function valueOf($value)
    {
        switch ($value) {
            case 0: return self::Invoice();
            case 1: return self::Basic();
            case 2: return self::InvoiceAndBasic();
            default: return null;
        }
    }


}

