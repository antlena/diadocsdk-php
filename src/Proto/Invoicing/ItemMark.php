<?php
/**
 * Generated by Protobuf protoc plugin.
 *
 * File descriptor : Invoicing/UniversalTransferDocumentInfo.proto
 */


namespace Antlena\SDK\Diadoc\Proto\Invoicing;

/**
 * Protobuf enum : Antlena.SDK.Diadoc.Proto.Invoicing.ItemMark
 */
class ItemMark extends \Protobuf\Enum
{

    /**
     * NotSpecified = 0
     */
    const NotSpecified_VALUE = 0;

    /**
     * Property = 1
     */
    const Property_VALUE = 1;

    /**
     * Job = 2
     */
    const Job_VALUE = 2;

    /**
     * Service = 3
     */
    const Service_VALUE = 3;

    /**
     * PropertyRights = 4
     */
    const PropertyRights_VALUE = 4;

    /**
     * Other = 5
     */
    const Other_VALUE = 5;

    /**
     * @var \Antlena\SDK\Diadoc\Proto\Invoicing\ItemMark
     */
    protected static $NotSpecified = null;

    /**
     * @var \Antlena\SDK\Diadoc\Proto\Invoicing\ItemMark
     */
    protected static $Property = null;

    /**
     * @var \Antlena\SDK\Diadoc\Proto\Invoicing\ItemMark
     */
    protected static $Job = null;

    /**
     * @var \Antlena\SDK\Diadoc\Proto\Invoicing\ItemMark
     */
    protected static $Service = null;

    /**
     * @var \Antlena\SDK\Diadoc\Proto\Invoicing\ItemMark
     */
    protected static $PropertyRights = null;

    /**
     * @var \Antlena\SDK\Diadoc\Proto\Invoicing\ItemMark
     */
    protected static $Other = null;

    /**
     * @return \Antlena\SDK\Diadoc\Proto\Invoicing\ItemMark
     */
    public static function NotSpecified()
    {
        if (self::$NotSpecified !== null) {
            return self::$NotSpecified;
        }

        return self::$NotSpecified = new self('NotSpecified', self::NotSpecified_VALUE);
    }

    /**
     * @return \Antlena\SDK\Diadoc\Proto\Invoicing\ItemMark
     */
    public static function Property()
    {
        if (self::$Property !== null) {
            return self::$Property;
        }

        return self::$Property = new self('Property', self::Property_VALUE);
    }

    /**
     * @return \Antlena\SDK\Diadoc\Proto\Invoicing\ItemMark
     */
    public static function Job()
    {
        if (self::$Job !== null) {
            return self::$Job;
        }

        return self::$Job = new self('Job', self::Job_VALUE);
    }

    /**
     * @return \Antlena\SDK\Diadoc\Proto\Invoicing\ItemMark
     */
    public static function Service()
    {
        if (self::$Service !== null) {
            return self::$Service;
        }

        return self::$Service = new self('Service', self::Service_VALUE);
    }

    /**
     * @return \Antlena\SDK\Diadoc\Proto\Invoicing\ItemMark
     */
    public static function PropertyRights()
    {
        if (self::$PropertyRights !== null) {
            return self::$PropertyRights;
        }

        return self::$PropertyRights = new self('PropertyRights', self::PropertyRights_VALUE);
    }

    /**
     * @return \Antlena\SDK\Diadoc\Proto\Invoicing\ItemMark
     */
    public static function Other()
    {
        if (self::$Other !== null) {
            return self::$Other;
        }

        return self::$Other = new self('Other', self::Other_VALUE);
    }

    /**
     * @param int $value
     * @return \Antlena\SDK\Diadoc\Proto\Invoicing\ItemMark
     */
    public static function valueOf($value)
    {
        switch ($value) {
            case 0: return self::NotSpecified();
            case 1: return self::Property();
            case 2: return self::Job();
            case 3: return self::Service();
            case 4: return self::PropertyRights();
            case 5: return self::Other();
            default: return null;
        }
    }


}

