<?php
/**
 * Generated by Protobuf protoc plugin.
 *
 * File descriptor : TimeBasedFilter.proto
 */


namespace Antlena\SDK\Diadoc\Proto;

/**
 * Protobuf enum : Antlena.SDK.Diadoc.Proto.SortDirection
 */
class SortDirection extends \Protobuf\Enum
{

    /**
     * UnknownSortDirection = 0
     */
    const UnknownSortDirection_VALUE = 0;

    /**
     * Ascending = 1
     */
    const Ascending_VALUE = 1;

    /**
     * Descending = 2
     */
    const Descending_VALUE = 2;

    /**
     * @var \Antlena\SDK\Diadoc\Proto\SortDirection
     */
    protected static $UnknownSortDirection = null;

    /**
     * @var \Antlena\SDK\Diadoc\Proto\SortDirection
     */
    protected static $Ascending = null;

    /**
     * @var \Antlena\SDK\Diadoc\Proto\SortDirection
     */
    protected static $Descending = null;

    /**
     * @return \Antlena\SDK\Diadoc\Proto\SortDirection
     */
    public static function UnknownSortDirection()
    {
        if (self::$UnknownSortDirection !== null) {
            return self::$UnknownSortDirection;
        }

        return self::$UnknownSortDirection = new self('UnknownSortDirection', self::UnknownSortDirection_VALUE);
    }

    /**
     * @return \Antlena\SDK\Diadoc\Proto\SortDirection
     */
    public static function Ascending()
    {
        if (self::$Ascending !== null) {
            return self::$Ascending;
        }

        return self::$Ascending = new self('Ascending', self::Ascending_VALUE);
    }

    /**
     * @return \Antlena\SDK\Diadoc\Proto\SortDirection
     */
    public static function Descending()
    {
        if (self::$Descending !== null) {
            return self::$Descending;
        }

        return self::$Descending = new self('Descending', self::Descending_VALUE);
    }

    /**
     * @param int $value
     * @return \Antlena\SDK\Diadoc\Proto\SortDirection
     */
    public static function valueOf($value)
    {
        switch ($value) {
            case 0: return self::UnknownSortDirection();
            case 1: return self::Ascending();
            case 2: return self::Descending();
            default: return null;
        }
    }


}

